
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://dyizpcoejfpadopfukxr.supabase.co";
const SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR5aXpwY29lamZwYWRvcGZ1a3hyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA0MTMxMzEsImV4cCI6MjA1NTk4OTEzMX0.6rWkKFUXglsLw4skKQv86_affkssW25xZwUF6vw_2R4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_KEY);

/**
 * Checks if the Supabase connection is working
 * @returns {Promise<boolean>} True if connection is successful, false otherwise
 */
export const checkSupabaseConnection = async (): Promise<boolean> => {
  try {
    // Try to fetch a simple query to check if the connection is working
    const { error } = await supabase.from('profiles').select('id', { count: 'exact', head: true });
    
    // If there's no error, the connection is successful
    if (!error) {
      console.log('Supabase connection: successful');
      return true;
    }
    
    // If there's an auth error, it could be due to RLS policies but the connection is still working
    if (error.code === 'PGRST301' || error.message.includes('permission denied')) {
      console.log('Supabase connection: successful (with permission restrictions)');
      return true;
    }
    
    console.error('Supabase connection failed:', error.message);
    return false;
  } catch (error) {
    console.error('Supabase connection error:', error);
    return false;
  }
};
